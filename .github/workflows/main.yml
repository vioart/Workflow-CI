name: MLflow CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install mlflow==2.22.1 pandas==2.2.2 scikit-learn==1.6.1 numpy==1.26.4 scipy==1.15.2 cloudpickle==3.1.1 psutil==7.0.0 matplotlib==3.8.0 seaborn==0.13.2

    - name: Run MLflow training script
      working-directory: MLProject
      run: |
        python modelling.py
        # Membuat script Python untuk mendapatkan experiment ID dan Run ID
        cat <<EOF > get_mlflow_ids.py
        import mlflow
        import os
        mlflow.set_tracking_uri("file:///${PWD}/mlruns")
        experiment = mlflow.get_experiment_by_name("Learning_Resources_Experiment_New")
        experiment_id = experiment.experiment_id if experiment else None
        if experiment_id:
            runs = mlflow.search_runs(experiment_ids=[experiment_id], order_by=["start_time DESC"])
            run_id = runs.iloc[0]["run_id"] if not runs.empty else None
            print(f"EXPERIMENT_ID={experiment_id}")
            print(f"RUN_ID={run_id}")
        else:
            print("Error: Experiment not found")
            exit(1)
        EOF
        # Menjalankan script dan menangkap output
        python get_mlflow_ids.py > mlflow_ids.txt
        # Mengekstrak EXPERIMENT_ID dan RUN_ID
        source mlflow_ids.txt
        if [ -z "$RUN_ID" ]; then
          echo "Error: RUN_ID is empty or invalid"
          exit 1
        fi
        echo "MLflow Run ID: $RUN_ID" > run_id.txt
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-artifacts
        path: MLProject/mlruns/
        retention-days: 7

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: vioartss
        password: dckr_pat_eMSwgYhimlyDO2EurgAGjZNQN4c

    - name: Build and push Docker image
      working-directory: MLProject
      run: |
        RUN_ID=$(cat run_id.txt | grep -oP '(?<=MLflow Run ID: )[a-f0-9-]+')
        if [ -z "$RUN_ID" ]; then
          echo "Error: RUN_ID is empty or invalid"
          exit 1
        fi
        echo "Building Docker image for Run ID: $RUN_ID"
        mlflow models build-docker \
          -m "mlruns/0/$RUN_ID/artifacts/random_forest_model" \
          -n "vioart/mlflow-medical-learning:latest" \
          --enable-mlserver
        docker push vioart/mlflow-medical-learning:latest
